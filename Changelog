version 2.0.2
 - Optimize rpc calls and support methods for binding other objects.
 - Add some very practical methods.

version 2.0.1
 - rpc server Optimization.

version 2.0.0
 - Supports method hook call chains, allowing one method to be hooked by multiple methods.
 - When initializing  through loadLibrary, it supports passing initialization flags.

version 1.1.3
 - Fix the crash issue on some android12 devices.
 - Add instance method argument count check.

version 1.1.2
- Fix the issue of GC triggering deadlocks during JIT compilation.

version 1.1.1
 - Optimize the hook logic and remove the abnormal features of rwx from the so library being hooked.
 - The rpc client adds support for java.
 - Add decompilation of the smali code.


version 1.1.0
 - Optimize jit compilation to avoid inconsistencies, code recycling and other issues caused by concurrency.

version 1.0.9
 - Optimize the code logic of the hook instruction to achieve better compatibility. Compatible with lineageOs.
 - jit compilation adds locks to prevent concurrency from causing jit code to be overwritten.

version 1.0.8
 - Fixed the issue left over from v1.0.5 where code execution listening was triggered only when the method was running.

version 1.0.7
 - Support direct loading of the so library for initialization.
 - Methods can be obtained through annotation aliases, ensuring that they can still be obtained even in the event of confusion.
 - Add proguard obfuscation rules.

version 1.0.6
 - Optimized the matching of primitive types.
 - Fix the issue where the system class instruction hook does not take effect.

version 1.0.5
 - Improve the execution speed of the instruction hook by only listening when the target method is executing.
 - Hooker is not necessarily an image class, it can be the target class itself.
 - Primitive types can also be fuzzy matched.
 - Can search for a method by its name. Support commenting aliases for methods, so that even after confusion, the target method can still be found.
 - Support multiple backups of a method and define the call way for the backup method.

version 1.0.4
 - Throw an exception when the target class is an interface.
 - Improve the methods related to the instruction hook.
 - Transaction optimization and entrypoint judgment of arm methods.

version 1.0.3
 - Supports hooking of instructions.

version 1.0.2
 - Support backing up the fields of the parent class and setting possible aliases for the fields.
 - The specific type of a field can be determined by passing objects.
 - Support setting the effective Android system scope.
 - Prioritize using AOT code.

version 1.0.1
 - Prohibit any instance methods, even if there are unrecognized annotations.
 - Multiple identical backup methods are not allowed.
 - In addition to disable the logging function, it now supports replacing the logging function.
version 1.0.0:
 - Initial version.